<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kpcnc.mydataapi.api.base.bank.repository.BankAccDepositMapper">

    <insert id="insertBankAccDeposit" parameterType="BankAccDepositEntity">
        INSERT INTO BANK_ACC_DEPOSIT
        (
            MEMBER_ID
            ,ORG_CD
            ,ACCOUNT_NUM
            ,SEQNO
            ,CURRENCY_CODE
            ,SAVING_METHOD
            ,ISSUE_DATE
            ,EXP_DATE
            ,COMMIT_AMT
            ,MONTHLY_PAID_IN_AMT
            ,API_TRAN_DAY
            ,API_TRAN_ID
            ,REG_USER_ID
            ,REG_DT
            ,CHG_USER_ID
            ,CHG_DT
        ) VALUES 
        (
            #{memberId, jdbcType=VARCHAR}
            ,#{orgCd, jdbcType=VARCHAR}
            ,#{accountNum, jdbcType=VARCHAR}
            ,#{seqno, jdbcType=VARCHAR}
            ,#{currencyCode, jdbcType=VARCHAR}
            ,#{savingMethod, jdbcType=VARCHAR}
            ,#{issueDate, jdbcType=VARCHAR}
            ,#{expDate, jdbcType=VARCHAR}
            ,#{commitAmt, jdbcType=NUMERIC}
            ,#{monthlyPaidInAmt, jdbcType=NUMERIC}
            ,#{apiTranDay, jdbcType=VARCHAR}
            ,#{apiTranId, jdbcType=VARCHAR}
            ,#{regUserId, jdbcType=VARCHAR}
            ,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
            ,#{chgUserId, jdbcType=VARCHAR}
            ,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
        ) 
    </insert>

    <update id="updateBankAccDeposit" parameterType="BankAccDepositEntity">
        UPDATE BANK_ACC_DEPOSIT
           SET 
               MEMBER_ID = #{memberId, jdbcType=VARCHAR}
               ,ORG_CD = #{orgCd, jdbcType=VARCHAR}
               ,ACCOUNT_NUM = #{accountNum, jdbcType=VARCHAR}
               ,SEQNO = #{seqno, jdbcType=VARCHAR}
               ,CURRENCY_CODE = #{currencyCode, jdbcType=VARCHAR}
               ,SAVING_METHOD = #{savingMethod, jdbcType=VARCHAR}
               ,ISSUE_DATE = #{issueDate, jdbcType=VARCHAR}
               ,EXP_DATE = #{expDate, jdbcType=VARCHAR}
               ,COMMIT_AMT = #{commitAmt, jdbcType=NUMERIC}
               ,MONTHLY_PAID_IN_AMT = #{monthlyPaidInAmt, jdbcType=NUMERIC}
               ,API_TRAN_DAY = #{apiTranDay, jdbcType=VARCHAR}
               ,API_TRAN_ID = #{apiTranId, jdbcType=VARCHAR}
               ,CHG_USER_ID = #{chgUserId, jdbcType=VARCHAR}
               ,CHG_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
            <if test = 'seqno  != null and seqno != ""'>
                AND SEQNO = #{seqno}
            </if>
    </update>

    <delete id="deleteBankAccDeposit" parameterType="BankAccDepositEntity">
        DELETE FROM BANK_ACC_DEPOSIT
         WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
            <if test = 'seqno  != null and seqno != ""'>
                AND SEQNO = #{seqno}
            </if>
    </delete>

    <delete id="deleteAllBankAccDeposit" parameterType="BankAccDepositEntity">
        DELETE FROM BANK_ACC_DEPOSIT
        WHERE
            MEMBER_ID = #{memberId}
          AND ORG_CD = #{orgCd}
    </delete>

    <select id="selectBankAccDeposit" parameterType="BankAccDepositSearch"  resultType="BankAccDepositEntity">
         SELECT 
               MEMBER_ID
               ,ORG_CD
               ,ACCOUNT_NUM
               ,SEQNO
               ,CURRENCY_CODE
               ,SAVING_METHOD
               ,ISSUE_DATE
               ,EXP_DATE
               ,COMMIT_AMT
               ,MONTHLY_PAID_IN_AMT
               ,API_TRAN_DAY
               ,API_TRAN_ID
               ,REG_USER_ID
               ,REG_DT
               ,CHG_USER_ID
               ,CHG_DT
        FROM BANK_ACC_DEPOSIT
       WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
            <if test = 'seqno  != null and seqno != ""'>
                AND SEQNO = #{seqno}
            </if>
    </select>

    <select id="selectBankAccDepositListTotalCnt" parameterType="BankAccDepositSearch"  resultType="Long">
         SELECT 
             COUNT(*) 
        FROM BANK_ACC_DEPOSIT
       WHERE 1 = 1 
       <if test = 'memberId  != null and memberId != ""'>
           AND MEMBER_ID = #{memberId}
       </if>
       <if test = 'orgCd  != null and orgCd != ""'>
           AND ORG_CD = #{orgCd}
       </if>
       <if test = 'accountNum  != null and accountNum != ""'>
           AND ACCOUNT_NUM = #{accountNum}
       </if>
       <if test = 'seqno  != null and seqno != ""'>
           AND SEQNO = #{seqno}
       </if>
    </select>

    <select id="selectBankAccDepositList" parameterType="BankAccDepositSearch"  resultType="BankAccDepositEntity">
         SELECT 
             T.ROW_NUM AS ROW_NUM 
             ,T.* 
         FROM 
         ( 
         SELECT 
             ROW_NUMBER() OVER(ORDER BY MEMBER_ID, ORG_CD, ACCOUNT_NUM, SEQNO) ROW_NUM
               ,MEMBER_ID
               ,ORG_CD
               ,ACCOUNT_NUM
               ,SEQNO
               ,CURRENCY_CODE
               ,SAVING_METHOD
               ,ISSUE_DATE
               ,EXP_DATE
               ,COMMIT_AMT
               ,MONTHLY_PAID_IN_AMT
               ,API_TRAN_DAY
               ,API_TRAN_ID
               ,REG_USER_ID
               ,REG_DT
               ,CHG_USER_ID
               ,CHG_DT
        FROM BANK_ACC_DEPOSIT
       WHERE 1 = 1 
       <if test = 'memberId  != null and memberId != ""'>
           AND MEMBER_ID = #{memberId}
       </if>
       <if test = 'orgCd  != null and orgCd != ""'>
           AND ORG_CD = #{orgCd}
       </if>
       <if test = 'accountNum  != null and accountNum != ""'>
           AND ACCOUNT_NUM = #{accountNum}
       </if>
       <if test = 'seqno  != null and seqno != ""'>
           AND SEQNO = #{seqno}
       </if>
        ORDER BY MEMBER_ID, ORG_CD, ACCOUNT_NUM, SEQNO
       ) T 
       <if test = 'startIndex != null and endIndex != null '> 
       WHERE T.ROW_NUM BETWEEN #{startIndex} AND #{endIndex} 
       </if> 
    </select>
</mapper>
