<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kpcnc.mydataapi.api.base.bank.repository.BankAccEachProdMapper">

    <insert id="insertBankAccEachProd" parameterType="BankAccEachProdEntity">
        INSERT INTO BANK_ACC_EACH_PROD
        (
            MEMBER_ID
            ,ORG_CD
            ,ACCOUNT_NUM
            ,PROD_NAME
            ,PROD_NUM
            ,PROD_TYPE
            ,CURRENCY_CODE
            ,EVAL_AMT
            ,PRINCIPAL_AMT
            ,HOLDING_NUM
            ,ISSUE_DATE
            ,EXP_DATE
            ,INT_RATE
            ,REG_USER_ID
            ,REG_DT
            ,CHG_USER_ID
            ,CHG_DT
        ) VALUES 
        (
            #{memberId, jdbcType=VARCHAR}
            ,#{orgCd, jdbcType=VARCHAR}
            ,#{accountNum, jdbcType=VARCHAR}
            ,#{prodName, jdbcType=VARCHAR}
            ,#{prodNum, jdbcType=VARCHAR}
            ,#{prodType, jdbcType=VARCHAR}
            ,#{currencyCode, jdbcType=VARCHAR}
            ,#{evalAmt, jdbcType=NUMERIC}
            ,#{principalAmt, jdbcType=NUMERIC}
            ,#{holdingNum, jdbcType=NUMERIC}
            ,#{issueDate, jdbcType=VARCHAR}
            ,#{expDate, jdbcType=VARCHAR}
            ,#{intRate, jdbcType=NUMERIC}
            ,#{regUserId, jdbcType=VARCHAR}
            ,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
            ,#{chgUserId, jdbcType=VARCHAR}
            ,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
        ) 
    </insert>

    <update id="updateBankAccEachProd" parameterType="BankAccEachProdEntity">
        UPDATE BANK_ACC_EACH_PROD
           SET 
               MEMBER_ID = #{memberId, jdbcType=VARCHAR}
               ,ORG_CD = #{orgCd, jdbcType=VARCHAR}
               ,ACCOUNT_NUM = #{accountNum, jdbcType=VARCHAR}
               ,PROD_NAME = #{prodName, jdbcType=VARCHAR}
               ,PROD_NUM = #{prodNum, jdbcType=VARCHAR}
               ,PROD_TYPE = #{prodType, jdbcType=VARCHAR}
               ,CURRENCY_CODE = #{currencyCode, jdbcType=VARCHAR}
               ,EVAL_AMT = #{evalAmt, jdbcType=NUMERIC}
               ,PRINCIPAL_AMT = #{principalAmt, jdbcType=NUMERIC}
               ,HOLDING_NUM = #{holdingNum, jdbcType=NUMERIC}
               ,ISSUE_DATE = #{issueDate, jdbcType=VARCHAR}
               ,EXP_DATE = #{expDate, jdbcType=VARCHAR}
               ,INT_RATE = #{intRate, jdbcType=NUMERIC}
               ,CHG_USER_ID = #{chgUserId, jdbcType=VARCHAR}
               ,CHG_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
           AND PROD_NAME = #{prodName}
           AND PROD_NUM = #{prodNum}
    </update>

    <delete id="deleteBankAccEachProd" parameterType="BankAccEachProdEntity">
        DELETE FROM BANK_ACC_EACH_PROD
         WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
           AND PROD_NAME = #{prodName}
           AND PROD_NUM = #{prodNum}
    </delete>

    <select id="selectBankAccEachProd" parameterType="BankAccEachProdSearch"  resultType="BankAccEachProdEntity">
         SELECT 
               MEMBER_ID
               ,ORG_CD
               ,ACCOUNT_NUM
               ,PROD_NAME
               ,PROD_NUM
               ,PROD_TYPE
               ,CURRENCY_CODE
               ,EVAL_AMT
               ,PRINCIPAL_AMT
               ,HOLDING_NUM
               ,ISSUE_DATE
               ,EXP_DATE
               ,INT_RATE
               ,REG_USER_ID
               ,REG_DT
               ,CHG_USER_ID
               ,CHG_DT
        FROM BANK_ACC_EACH_PROD
       WHERE 
               MEMBER_ID = #{memberId}
           AND ORG_CD = #{orgCd}
           AND ACCOUNT_NUM = #{accountNum}
           AND PROD_NAME = #{prodName}
           AND PROD_NUM = #{prodNum}
    </select>

    <select id="selectBankAccEachProdListTotalCnt" parameterType="BankAccEachProdSearch"  resultType="Long">
         SELECT 
             COUNT(*) 
        FROM BANK_ACC_EACH_PROD
       WHERE 1 = 1 
       <if test = 'memberId  != null and memberId != ""'>
           AND MEMBER_ID = #{memberId}
       </if>
       <if test = 'orgCd  != null and orgCd != ""'>
           AND ORG_CD = #{orgCd}
       </if>
       <if test = 'accountNum  != null and accountNum != ""'>
           AND ACCOUNT_NUM = #{accountNum}
       </if>
       <if test = 'prodName  != null and prodName != ""'>
           AND PROD_NAME = #{prodName}
       </if>
       <if test = 'prodNum  != null and prodNum != ""'>
           AND PROD_NUM = #{prodNum}
       </if>
    </select>

    <select id="selectBankAccEachProdList" parameterType="BankAccEachProdSearch"  resultType="BankAccEachProdEntity">
         SELECT 
             T.ROW_NUM AS ROW_NUM 
             ,T.* 
         FROM 
         ( 
         SELECT 
             ROW_NUMBER() OVER(ORDER BY MEMBER_ID, ORG_CD, ACCOUNT_NUM, PROD_NAME, PROD_NUM) ROW_NUM
               ,MEMBER_ID
               ,ORG_CD
               ,ACCOUNT_NUM
               ,PROD_NAME
               ,PROD_NUM
               ,PROD_TYPE
               ,CURRENCY_CODE
               ,EVAL_AMT
               ,PRINCIPAL_AMT
               ,HOLDING_NUM
               ,ISSUE_DATE
               ,EXP_DATE
               ,INT_RATE
               ,REG_USER_ID
               ,REG_DT
               ,CHG_USER_ID
               ,CHG_DT
        FROM BANK_ACC_EACH_PROD
       WHERE 1 = 1 
       <if test = 'memberId  != null and memberId != ""'>
           AND MEMBER_ID = #{memberId}
       </if>
       <if test = 'orgCd  != null and orgCd != ""'>
           AND ORG_CD = #{orgCd}
       </if>
       <if test = 'accountNum  != null and accountNum != ""'>
           AND ACCOUNT_NUM = #{accountNum}
       </if>
       <if test = 'prodName  != null and prodName != ""'>
           AND PROD_NAME = #{prodName}
       </if>
       <if test = 'prodNum  != null and prodNum != ""'>
           AND PROD_NUM = #{prodNum}
       </if>
        ORDER BY MEMBER_ID, ORG_CD, ACCOUNT_NUM, PROD_NAME, PROD_NUM
       ) T 
       <if test = 'startIndex != null and endIndex != null '> 
       WHERE T.ROW_NUM BETWEEN #{startIndex} AND #{endIndex} 
       </if> 
    </select>
</mapper>
